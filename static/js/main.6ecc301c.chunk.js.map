{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","padding","spacing","MainBackground","_MainBackground","background","Object","defineProperty","ItemBackground","margin","height","footer","_footer","App","props","_this","classCallCheck","this","_super","call","state","Dailydata","items","confirmedcase","_this2","fetch","then","response","json","data","setState","statewise","cases_time_series","_this3","react_default","a","createElement","className","style","display","justifyContent","paddingTop","flexDirection","map","index","flex","Card","backgroundColor","alignItems","width","Typography","Wrap","variant","component","active","deaths","recovered","confirmed","daily","length","date","dailyconfirmed","dailyrecovered","Grid","container","direction","justify","console","log","item","zeroMinWidth","xs","sm","key","border","borderRadius","color","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6ecc301c.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles'\n// import CovidSVG from './CovidSVG.svg'\nimport {\n    Grid,\n    Card,\n    Typography,\n    \n    \n\n} from '@material-ui/core/'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n      flexGrow: 1,\n      padding: theme.spacing(2)\n  }\n}))\n\nconst MainBackground= {\n  // background: '#c31432',  /* fallback for old browsers */\n  // background: '-webkit-linear-gradient(to top, #240b36, #c31432)',  /* Chrome 10-25, Safari 5.1-6 */\n  // background: 'linear-gradient(to top, #240b36, #c31432)', /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n  background: '#ADA996',  /* fallback for old browsers */\n  background: '-webkit-linear-gradient(to top, #EAEAEA, #DBDBDB, #F2F2F2, #ADA996)',  /* Chrome 10-25, Safari 5.1-6 */\n  background: 'linear-gradient(to top, #EAEAEA, #DBDBDB, #F2F2F2, #ADA996)', /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n  // backgroundImage: `url(${CovidSVG})`\n  }\n\nconst ItemBackground = {\n  background: '#f1f2f6',  /* fallback for old browsers * #dfe4ea  #f1f2f6/ \n  // background: '-webkit-linear-gradient(to right, #33001b, #ff0084)', /* Chrome 10-25, Safari 5.1-6 */\n  // background: 'linear-gradient(to right, #33001b, #ff0084)', /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n  padding:10, \n  margin:10, \n  height:150\n}\n\nconst footer = {\n  background: '#000000',  /* fallback for old browsers */\n  background: '-webkit-linear-gradient(to left, #434343, #000000)',  /* Chrome 10-25, Safari 5.1-6 */\n  background: 'linear-gradient(to left, #434343, #000000)', /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n  display:'flex',\n  justifyContent:'center',\n  color: '#d2dae2',\n  alignItems:'center',\n  padding:10,\n}\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    // var j = JSON.parse('https://api.rootnet.in/covid19-in/stats/latest')\n    \n    \n    this.state = {\n      Dailydata: [],\n      items: [],\n      state: null,\n      confirmedcase: null,\n    };\n  }\n  componentDidMount() {\n    //https://api.rootnet.in/covid19-in/stats/latest\n    fetch('https://api.covid19india.org/data.json')\n    .then(response => {\n      return response.json();\n    })\n    .then((data) => {\n      this.setState({\n        items: data.statewise,\n        Dailydata: data.cases_time_series,\n        // loc: data.data.regional.loc,\n        // confirmedcase: data.data.regional.confirmedCasesIndian\n      });\n      // console.log(this.state.items[2].state)   \n    })\n  }\n\n  \n  render(){\n    // console.log(this.j)\n    return(\n      \n      <div className={useStyles.root} style={MainBackground}>\n      \n      <h2 style={{display:'flex',justifyContent:'center',paddingTop:10,}} >Covid19 INDIA Live Data</h2>\n      <div style={{display:'flex', flexDirection:'row',}}>\n          {/* FOR TOTAL DATA AS OF NOW */}\n          {\n            this.state.items.map((data, index) =>\n            {\n              if(index===0)\n              {\n                return(\n                <div style={{flex:1,}}>\n                <Card style={{padding:10,margin:10,height:150,backgroundColor:'#ffdd59',}}>\n                    <div style={{display:'flex',flexDirection:'column',alignItems:'center', height:'100%', width:'100%',}}>\n                    <div style={{flex:1,}}>\n                      <Typography Wrap variant=\"headline\" component=\"h3\">{data.state}</Typography>\n                      {/* <CardHeader title={data.state}/> */}\n                    </div>\n                    <div style={{flex:2,}}>\n                      <Typography component=\"p\">Active - {data.active}</Typography>\n                      <Typography component=\"p\">Death - {data.deaths}</Typography>\n                      <Typography component=\"p\">Recovered - {data.recovered}</Typography>\n                      <Typography component=\"p\">Confirmed - {data.confirmed}</Typography>\n                    </div>\n                    </div>\n                  </Card>\n                  </div>)\n              }\n              \n            })\n          }        \n\n          {/* FOR CURRENT DATE DATA       */}\n          {\n            this.state.Dailydata.map((daily, index) => {\n              if(index===this.state.Dailydata.length-1){\n                return(\n                  <div style={{flex:1}}>\n              <Card style={{padding:10,margin:10,height:150,backgroundColor:'#ffdd59',variant:\"outlined\"}}>\n                <div style={{display:'flex',flexDirection:'column', alignItems:'center',justifyContent:'flex-start',height:'100%', width:'100%',}}>\n                  <div style={{flex:1,}}>\n                    <Typography Wrap variant=\"headline\" component=\"h3\">For  {daily.date}</Typography>\n                    {/* <CardHeader title={data.state}/> */}\n                  </div>\n                  <div style={{flex:2,}}>\n                    <Typography component=\"p\">Confirmed - {daily.dailyconfirmed}</Typography>\n                    <Typography component=\"p\">Recovered - {daily.dailyrecovered}</Typography>\n                  </div>\n                </div>\n                </Card>\n                </div>)}\n            })\n          }\n        </div>\n        <Grid\n                container\n                spacing={12}\n                direction=\"row\"\n                justify=\"flex-start\"\n                alignItems=\"center\"\n            >\n          {/* THIS IS STATE WISE DATA   */}\n          {\n            this.state.items.map((data, index) => {\n              if(index === 0){\n                return null\n            }\n            else{\n              console.log(data)\n              return(\n                // 6,4\n                <Grid item zeroMinWidth xs={6} sm={4} key={index} >\n                  <Card style={ItemBackground}>\n\n                  <div style={{display:'flex',flexDirection:'column',justifyContent:'center', alignItems:'center',height:'100%', width:'100%',}}>\n                    <div style={{flex:1,}}>\n                      <Typography Wrap variant=\"headline\" component=\"h5\">{data.state}</Typography>\n                      {/* <CardHeader title={data.state}/> */}\n                    </div>\n                    <div style={{flex:2,}}>\n                      {/* <Typography component=\"p\">Today - {data.delta.active}</Typography> */}\n                      <Typography component=\"p\">Active - {data.active}</Typography>\n                      <Typography component=\"p\">Death - {data.deaths}</Typography>\n                      <Typography component=\"p\">Recovered - {data.recovered}</Typography>\n                      <Typography component=\"p\">Confirmed - {data.confirmed}</Typography>\n                      \n                    </div>\n                    </div>\n                    \n                  </Card>\n                </Grid>\n                \n            )\n            }})\n          }\n        </Grid>\n        <br/><br/><br/><br/>\n        <div style={{display:'flex', flexDirection:'column',justifyContent:'center',alignItems:'center', padding:10}}>\n\n          <div style={{flex:1,border: '1px solid #636e72',borderRadius:15, padding:5,backgroundColor:'#000000', color:'#FF0000'}}>\n            <p>There’s currently no vaccine to prevent coronavirus disease (COVID-19).</p>\n          </div>\n          <br/>\n          <div style={{flex:1,border: '1px solid #636e72',borderRadius:15,padding:5}}>\n          <p><u>You can protect yourself and help prevent spreading the virus to others if you:</u><br/><br/>\n            Do<br/>\n            1) Wash your hands regularly for 20 seconds, with soap and water or alcohol-based hand rub<br/>\n            2) Cover your nose and mouth with a disposable tissue or flexed elbow when you cough or sneeze<br/>\n            3) Avoid close contact (1 meter or 3 feet) with people who are unwell<br/>\n            4) Stay home and self-isolate from others in the household if you feel unwell<br/><br/>\n            Don't<br/>\n            5) Touch your eyes, nose, or mouth if your hands are not clean<br/>\n            </p>\n            </div>\n            <br/>\n            <div style={{flex:1,border: '1px solid #636e72',borderRadius:15,padding:5,}}\n            ><p><b>EMERGENCY CONTACT NUMBER : +91-11-23978046 </b></p></div>\n        </div>\n        <br/>\n        <p style={footer} >Developed and maintained by Rahul Nag, for more information contact me at mr.rahulnag67@gmail.com</p>\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}